{"ast":null,"code":"// import './App.css';\n// import { Component, useState } from 'react';\n\n// const heuristic = {\n//   technique: \"A* Search\",\n//   startword: \"sea\",\n//   endword: \"bee\",\n//   optimal: 12,\n//   path: [\"reseal\", \"reseat\", \"resent\", \"resend\", \"reseed\", \"rested\", \"tested\", \"tasted\", \"tauted\", \"dauted\", \"daubed\", \"dabbed\", \"dubbed\"],\n//   space: \"0.45 KB\",\n//   time: \"0.1160 sec\"\n// }\n\n// class Header extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       text: '', // Store textarea content\n//       startword: heuristic.startword,\n//       endword: heuristic.endword\n//     };\n//   }\n\n//   componentDidMount() {\n//     document.addEventListener('keydown', this.handleKeyPress);\n//   }\n\n//   componentWillUnmount() {\n//     document.removeEventListener('keydown', this.handleKeyPress);\n//   }\n\n//   handleKeyPress = (event) => {\n//     const { key } = event;\n\n//     if (key === 'Backspace') {\n//       this.handleDelete(); // Delete character when pressing Backspace\n//     }\n//     else if (/[a-zA-Z]/.test(key)) {\n//       // Allow only letters (A-Z, a-z)\n//       this.setState((prevState) => ({\n//         text: prevState.text + key.toUpperCase(), // Convert to uppercase\n//       }));\n//     } else if (key === 'Enter') {\n//       this.setState((prevState) => ({\n//         text: prevState.text + '\\n', // Add a new line\n//       }));\n//     }\n//   };\n\n//   handleButtonClick = (char) => {\n//     this.setState((prevState) => ({\n//       text: prevState.text + char,\n//     }));\n//   };\n\n//   handleDelete = () => {\n//     this.setState((prevState) => ({\n//       text: prevState.text.slice(0, -1), // Remove the last character\n//     }));\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <div class=\"gameplay\">\n//           <div className=\"textarea startword\">      \n//             {this.state.startword.split('').map((char) => (\n//               <textarea\n//                 value={char}\n//                 className=\"\"\n//                 readOnly\n//               >\n//                 {char}\n//               </textarea>\n//             ))}      \n//           </div>\n//           <div className=\"textarea input\">            \n//             <textarea class=\"\" value={this.state.text} readOnly></textarea>\n//             <textarea class=\"\" value={this.state.text} readOnly></textarea>\n//             <textarea class=\"\" value={this.state.text} readOnly></textarea>\n//           </div>\n//           <div className=\"textarea endword\">\n//             {this.state.endword.split('').map((char) => (\n//                 <textarea\n//                   value={char}\n//                   className=\"\"\n//                   readOnly\n//                 >\n//                   {char}\n//                 </textarea>\n//               ))}            \n//           </div>\n//         </div>\n//         <div className=\"keyboard\">\n//           <div className=\"keyboardRow\">\n//             {'QWERTYUIOP'.split('').map((char) => (\n//               <button\n//                 key={char}\n//                 className=\"button characterButton\"\n//                 onClick={() => this.handleButtonClick(char)}\n//               >\n//                 {char}\n//               </button>\n//             ))}\n//           </div>\n//           <div className=\"keyboardRow\">\n//             <div className=\"keyboardSpacer\"></div>\n//             {'ASDFGHJKL'.split('').map((char) => (\n//               <button\n//                 key={char}\n//                 className=\"button characterButton\"\n//                 onClick={() => this.handleButtonClick(char)}\n//               >\n//                 {char}\n//               </button>\n//             ))}\n//             <div className=\"keyboardSpacer\"></div>\n//           </div>\n//           <div className=\"keyboardRow\">\n//             <button className=\"button enterButton\" onClick={() => this.handleButtonClick('\\n')}>\n//               Enter\n//             </button>\n//             {'ZXCVBNM'.split('').map((char) => (\n//               <button\n//                 key={char}\n//                 className=\"button characterButton\"\n//                 onClick={() => this.handleButtonClick(char)}\n//               >\n//                 {char}\n//               </button>\n//             ))}\n//             <button className=\"button deleteButton\" onClick={this.handleDelete}>\n//               <img\n//                 src=\"https://static-00.iconduck.com/assets.00/backspace-icon-2048x1509-3pqr8k29.png\"\n//                 alt=\"-\"\n//               />\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// function App() {\n//   return (\n//     <div>\n//       <Header/>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// -----------------------------------------------------------------------------------------------------------------------\n\n// import React, { Component, createRef } from \"react\";\n\n// class TextAreaComponent extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { text: \"\", word : \"e\" };\n//     this.textAreaRef = createRef(); // สร้าง ref\n//   }\n\n//   checkClassName = () => {\n//     if (this.textAreaRef.current) {\n//       console.log(this.textAreaRef.current.classList.contains(\"filled\")); // true หรือ false\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <textarea\n//           ref={this.textAreaRef}\n//           className={this.state.text ? \"filled\" : \"current\"}\n//           // value={ this.state.text}\n//           value={ this.state.text}\n//           onChange={(e) => this.setState({ text: e.target.value })}\n//           placeholder=\"Type something...\"\n//         ></textarea>\n//         {/* <button onClick={this.checkClassName}>Check Class</button> */}\n//       </div>\n//     );\n//   }\n// }\n\n// export default TextAreaComponent;","map":{"version":3,"names":[],"sources":["C:/Users/ADMIN/Documents/wordladder-fe/wordladder_frontend/src/App.js"],"sourcesContent":["// import './App.css';\n// import { Component, useState } from 'react';\n\n// const heuristic = {\n//   technique: \"A* Search\",\n//   startword: \"sea\",\n//   endword: \"bee\",\n//   optimal: 12,\n//   path: [\"reseal\", \"reseat\", \"resent\", \"resend\", \"reseed\", \"rested\", \"tested\", \"tasted\", \"tauted\", \"dauted\", \"daubed\", \"dabbed\", \"dubbed\"],\n//   space: \"0.45 KB\",\n//   time: \"0.1160 sec\"\n// }\n\n// class Header extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       text: '', // Store textarea content\n//       startword: heuristic.startword,\n//       endword: heuristic.endword\n//     };\n//   }\n\n//   componentDidMount() {\n//     document.addEventListener('keydown', this.handleKeyPress);\n//   }\n\n//   componentWillUnmount() {\n//     document.removeEventListener('keydown', this.handleKeyPress);\n//   }\n\n//   handleKeyPress = (event) => {\n//     const { key } = event;\n    \n//     if (key === 'Backspace') {\n//       this.handleDelete(); // Delete character when pressing Backspace\n//     }\n//     else if (/[a-zA-Z]/.test(key)) {\n//       // Allow only letters (A-Z, a-z)\n//       this.setState((prevState) => ({\n//         text: prevState.text + key.toUpperCase(), // Convert to uppercase\n//       }));\n//     } else if (key === 'Enter') {\n//       this.setState((prevState) => ({\n//         text: prevState.text + '\\n', // Add a new line\n//       }));\n//     }\n//   };\n\n//   handleButtonClick = (char) => {\n//     this.setState((prevState) => ({\n//       text: prevState.text + char,\n//     }));\n//   };\n\n//   handleDelete = () => {\n//     this.setState((prevState) => ({\n//       text: prevState.text.slice(0, -1), // Remove the last character\n//     }));\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <div class=\"gameplay\">\n//           <div className=\"textarea startword\">      \n//             {this.state.startword.split('').map((char) => (\n//               <textarea\n//                 value={char}\n//                 className=\"\"\n//                 readOnly\n//               >\n//                 {char}\n//               </textarea>\n//             ))}      \n//           </div>\n//           <div className=\"textarea input\">            \n//             <textarea class=\"\" value={this.state.text} readOnly></textarea>\n//             <textarea class=\"\" value={this.state.text} readOnly></textarea>\n//             <textarea class=\"\" value={this.state.text} readOnly></textarea>\n//           </div>\n//           <div className=\"textarea endword\">\n//             {this.state.endword.split('').map((char) => (\n//                 <textarea\n//                   value={char}\n//                   className=\"\"\n//                   readOnly\n//                 >\n//                   {char}\n//                 </textarea>\n//               ))}            \n//           </div>\n//         </div>\n//         <div className=\"keyboard\">\n//           <div className=\"keyboardRow\">\n//             {'QWERTYUIOP'.split('').map((char) => (\n//               <button\n//                 key={char}\n//                 className=\"button characterButton\"\n//                 onClick={() => this.handleButtonClick(char)}\n//               >\n//                 {char}\n//               </button>\n//             ))}\n//           </div>\n//           <div className=\"keyboardRow\">\n//             <div className=\"keyboardSpacer\"></div>\n//             {'ASDFGHJKL'.split('').map((char) => (\n//               <button\n//                 key={char}\n//                 className=\"button characterButton\"\n//                 onClick={() => this.handleButtonClick(char)}\n//               >\n//                 {char}\n//               </button>\n//             ))}\n//             <div className=\"keyboardSpacer\"></div>\n//           </div>\n//           <div className=\"keyboardRow\">\n//             <button className=\"button enterButton\" onClick={() => this.handleButtonClick('\\n')}>\n//               Enter\n//             </button>\n//             {'ZXCVBNM'.split('').map((char) => (\n//               <button\n//                 key={char}\n//                 className=\"button characterButton\"\n//                 onClick={() => this.handleButtonClick(char)}\n//               >\n//                 {char}\n//               </button>\n//             ))}\n//             <button className=\"button deleteButton\" onClick={this.handleDelete}>\n//               <img\n//                 src=\"https://static-00.iconduck.com/assets.00/backspace-icon-2048x1509-3pqr8k29.png\"\n//                 alt=\"-\"\n//               />\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// function App() {\n//   return (\n//     <div>\n//       <Header/>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n\n\n// import React, { Component, createRef } from \"react\";\n\n// class TextAreaComponent extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { text: \"\", word : \"e\" };\n//     this.textAreaRef = createRef(); // สร้าง ref\n//   }\n\n//   checkClassName = () => {\n//     if (this.textAreaRef.current) {\n//       console.log(this.textAreaRef.current.classList.contains(\"filled\")); // true หรือ false\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <textarea\n//           ref={this.textAreaRef}\n//           className={this.state.text ? \"filled\" : \"current\"}\n//           // value={ this.state.text}\n//           value={ this.state.text}\n//           onChange={(e) => this.setState({ text: e.target.value })}\n//           placeholder=\"Type something...\"\n//         ></textarea>\n//         {/* <button onClick={this.checkClassName}>Check Class</button> */}\n//       </div>\n//     );\n//   }\n// }\n\n// export default TextAreaComponent;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}